{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "OAuthGetAuthorizationCode",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "ADMIN_DOMAIN": {
      "type": "string",
      "defaultValue": "domain",
      "metadata": {
        "description": "The Name of the AD Domain or Computer name"
      }
    },
    "ADMIN_USERNAME": {
      "type": "string",
      "defaultValue": "admin@microsoft.com",
      "metadata": {
        "description": "The Admin username"
      }
    },
    "ADMIN_PASSWORD": {
      "type": "SecureString",
      "defaultValue": "BpvF4pggjOMU7NjMPYfpHM8wn9ideRN4YZWZzPvT7lJeTLQhDzzGg==",
      "metadata": {
        "description": "The Admin user password"
      }
    },
    "BASE_URI": {
      "type": "string",
      "defaultValue": "ODataV4/SquareOAuthService_GetAuthorizationCode?company=e93b67c5-88f1-ea11-bb43-000d3a2e8415",
      "metadata": {
        "description": "The Name of the BC environment"
      }
    },
    "COMPANY_ID": {
      "type": "string",
      "defaultValue": "e93b67c5-88f1-ea11-bb43-000d3a2e8415",
      "metadata": {
        "description": "The Name of the BC environment"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Y1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "Y1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/ciellosinc/WindowsAuthCodeFunction.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    }
  },
  "variables": {
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[concat(parameters('appName'), '-plan')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]",
    "functionsName": "[concat(variables('functionAppName'), '-functions')]",
    "siteUrl": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/')]",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "name": "[variables('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": false,
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "appSettings": [
            {
              "name": "ADMIN_DOMAIN",
              "value": "[parameters('ADMIN_DOMAIN')]",
              "slotSetting": false
            },
            {
              "name": "ADMIN_PASSWORD",
              "value": "[parameters('ADMIN_PASSWORD')]",
              "slotSetting": false
            },
            {
              "name": "ADMIN_USERNAME",
              "value": "[parameters('ADMIN_USERNAME')]",
              "slotSetting": false
            },
            {
              "name": "BASE_URI",
              "value": "[parameters('BASE_URI')]",
              "slotSetting": false
            },
            {
              "name": "COMPANY_ID",
              "value": "[parameters('COMPANY_ID')]",
              "slotSetting": false
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('functionAppName'), '/', variables('functionAppName'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('functionAppName'), 'web')]"
      ],
      "properties": {
        "siteName": "[variables('functionAppName')]",
        "hostNameType": "Verified"
      }
    }
  ]
}
